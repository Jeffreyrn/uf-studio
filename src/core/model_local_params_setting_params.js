
const Params = {};

const columnName_slug = 'slug';
const columnName_num = 'num';
const columnName_uuid = 'uuid';
const columnName_Group = 'group';
const columnName_Name = 'name';
const columnName_Address = 'address';
const columnName_CurrentValue = 'current_value';
const columnName_DefaultValue = 'default_value';
const columnName_Max = 'max';
const columnName_Min = 'min';
const columnName_Unit = 'unit';
const columnName_Sign = 'sign';
const columnName_Width = 'width';
const columnName_Input = 'input';
const columnName_InEeprom = 'in_eeprom';

const allCols = [];
allCols.push(columnName_num);
allCols.push(columnName_Group);
allCols.push(columnName_Name);
allCols.push(columnName_Address);
allCols.push(columnName_CurrentValue);
allCols.push(columnName_DefaultValue);
allCols.push(columnName_Max);
allCols.push(columnName_Min);
allCols.push(columnName_Unit);
allCols.push(columnName_Sign);
allCols.push(columnName_Width);
allCols.push(columnName_Input);
allCols.push(columnName_InEeprom);

// init
function initRow(aRow) {
  aRow[columnName_Address] = '256';
  aRow[columnName_CurrentValue] = 0;
  aRow[columnName_DefaultValue] = 0;
  aRow[columnName_Max] = 1;
  aRow[columnName_Min] = 0;
  aRow[columnName_Sign] = false;
  aRow[columnName_Width] = 16;
  aRow[columnName_Input] = 0;
  aRow[columnName_InEeprom] = 0;
}

var rows;
var counter = 0;

// P1
rows = {};
counter++;
Params.servo_on_off = rows;
rows[columnName_num] = counter;
rows[columnName_Group] = 'P1';
rows[columnName_Name] = 'Servo ON/OFF';
rows[columnName_Unit] = '-';
initRow(rows);
rows[columnName_Address] = '256';
rows[columnName_CurrentValue] = 0;
rows[columnName_DefaultValue] = 0;
rows[columnName_Max] = 1;
rows[columnName_Min] = 0;
rows[columnName_Sign] = true;
rows[columnName_Width] = 16;
rows[columnName_Input] = 0;
rows[columnName_InEeprom] = 0;

rows = {};
counter++;
Params.control_mode = rows;
rows[columnName_num] = counter;
rows[columnName_Group] = 'P1';
rows[columnName_Name] = 'Control Mode';
rows[columnName_Unit] = '-';
initRow(rows);
rows[columnName_Address] = '257';
rows[columnName_CurrentValue] = 4;
rows[columnName_DefaultValue] = 4;
rows[columnName_Max] = 1;
rows[columnName_Min] = 0;
rows[columnName_Sign] = false;
rows[columnName_Width] = 16;
rows[columnName_Input] = 0;
rows[columnName_InEeprom] = 1;

rows = {};
counter++;
Params.motor_direction = rows;
rows[columnName_num] = counter;
rows[columnName_Group] = 'P1';
rows[columnName_Name] = 'Motor Direction';
rows[columnName_Unit] = '-';
initRow(rows);
rows[columnName_Address] = '258';
rows[columnName_CurrentValue] = 0;
rows[columnName_DefaultValue] = 0;
rows[columnName_Max] = 1;
rows[columnName_Min] = 0;
rows[columnName_Sign] = false;
rows[columnName_Width] = 16;
rows[columnName_Input] = 0;
rows[columnName_InEeprom] = 1;

// P2
rows = {};
counter++;
Params.position_kp = rows;
rows[columnName_num] = counter;
rows[columnName_Group] = 'P2';
rows[columnName_Name] = 'Position Kp';
rows[columnName_Unit] = '-';
initRow(rows);
rows[columnName_Address] = '512';
rows[columnName_CurrentValue] = 20;
rows[columnName_DefaultValue] = 20;
rows[columnName_Max] = 1000;
rows[columnName_Min] = 1;
rows[columnName_Sign] = false;
rows[columnName_Width] = 16;
rows[columnName_Input] = 0;
rows[columnName_InEeprom] = 1;

rows = {};
counter++;
Params.position_forward_kp = rows;
rows[columnName_num] = counter;
rows[columnName_Group] = 'P2';
rows[columnName_Name] = 'Position Forward Kp';
rows[columnName_Unit] = '0.1%';
initRow(rows);
rows[columnName_Address] = '513';
rows[columnName_CurrentValue] = 10;
rows[columnName_DefaultValue] = 10;
rows[columnName_Max] = 1000;
rows[columnName_Min] = 1;
rows[columnName_Sign] = false;
rows[columnName_Width] = 16;
rows[columnName_Input] = 0;
rows[columnName_InEeprom] = 1;

rows = {};
counter++;
Params.position_forward_tc = rows;
rows[columnName_num] = counter;
rows[columnName_Group] = 'P2';
rows[columnName_Name] = 'Position Forward Tc';
rows[columnName_Unit] = 'ms';
initRow(rows);
rows[columnName_Address] = '514';
rows[columnName_CurrentValue] = 5;
rows[columnName_DefaultValue] = 5;
rows[columnName_Max] = 1;
rows[columnName_Min] = 0;
rows[columnName_Sign] = false;
rows[columnName_Width] = 16;
rows[columnName_Input] = 0;
rows[columnName_InEeprom] = 1;

rows = {};
counter++;
Params.speed_kp = rows;
rows[columnName_num] = counter;
rows[columnName_Group] = 'P2';
rows[columnName_Name] = 'Speed Kp';
rows[columnName_Unit] = '0.1';
initRow(rows);
rows[columnName_Address] = '258';
rows[columnName_CurrentValue] = 0;
rows[columnName_DefaultValue] = 0;
rows[columnName_Max] = 1;
rows[columnName_Min] = 0;
rows[columnName_Sign] = false;
rows[columnName_Width] = 16;
rows[columnName_Input] = 0;
rows[columnName_InEeprom] = 1;

rows = {};
counter++;
Params.speed_ki = rows;
rows[columnName_num] = counter;
rows[columnName_Group] = 'P2';
rows[columnName_Name] = 'Speed Ki';
rows[columnName_Unit] = '';
initRow(rows);
rows[columnName_Address] = '258';
rows[columnName_CurrentValue] = 0;
rows[columnName_DefaultValue] = 0;
rows[columnName_Max] = 1;
rows[columnName_Min] = 0;
rows[columnName_Sign] = false;
rows[columnName_Width] = 16;
rows[columnName_Input] = 0;
rows[columnName_InEeprom] = 1;

// P3
rows = {};
counter++;
Params.position_acc_time = rows;
rows[columnName_num] = counter;
rows[columnName_Group] = 'P3';
rows[columnName_Name] = 'Position Acc Time';
rows[columnName_Unit] = 'ms';
initRow(rows);
rows[columnName_Address] = '258';
rows[columnName_CurrentValue] = 0;
rows[columnName_DefaultValue] = 0;
rows[columnName_Max] = 1;
rows[columnName_Min] = 0;
rows[columnName_Sign] = false;
rows[columnName_Width] = 16;
rows[columnName_Input] = 0;
rows[columnName_InEeprom] = 1;

rows = {};
counter++;
Params.position_dec_time = rows;
rows[columnName_num] = counter;
rows[columnName_Group] = 'P3';
rows[columnName_Name] = 'Position Dec Time';
rows[columnName_Unit] = 'ms';
initRow(rows);
rows[columnName_Address] = '258';
rows[columnName_CurrentValue] = 0;
rows[columnName_DefaultValue] = 0;
rows[columnName_Max] = 1;
rows[columnName_Min] = 0;
rows[columnName_Sign] = false;
rows[columnName_Width] = 16;
rows[columnName_Input] = 0;
rows[columnName_InEeprom] = 1;

rows = {};
counter++;
Params.position_smooth_time = rows;
rows[columnName_num] = counter;
rows[columnName_Group] = 'P3';
rows[columnName_Name] = 'Position Smooth Time';
rows[columnName_Unit] = 'ms';
initRow(rows);
rows[columnName_Address] = '258';
rows[columnName_CurrentValue] = 0;
rows[columnName_DefaultValue] = 0;
rows[columnName_Max] = 1;
rows[columnName_Min] = 0;
rows[columnName_Sign] = false;
rows[columnName_Width] = 16;
rows[columnName_Input] = 0;
rows[columnName_InEeprom] = 1;

rows = {};
counter++;
Params.position_maximum_time = rows;
rows[columnName_num] = counter;
rows[columnName_Group] = 'P3';
rows[columnName_Name] = 'Position Maximum Time';
rows[columnName_Unit] = 'r/min';
initRow(rows);
rows[columnName_Address] = '258';
rows[columnName_CurrentValue] = 0;
rows[columnName_DefaultValue] = 0;
rows[columnName_Max] = 1;
rows[columnName_Min] = 0;
rows[columnName_Sign] = false;
rows[columnName_Width] = 16;
rows[columnName_Input] = 0;
rows[columnName_InEeprom] = 1;

rows = {};
counter++;
Params.position_complete_value = rows;
rows[columnName_num] = counter;
rows[columnName_Group] = 'P3';
rows[columnName_Name] = 'Position Complete Value';
rows[columnName_Unit] = 'pulse';
initRow(rows);
rows[columnName_Address] = '258';
rows[columnName_CurrentValue] = 0;
rows[columnName_DefaultValue] = 0;
rows[columnName_Max] = 1;
rows[columnName_Min] = 0;
rows[columnName_Sign] = false;
rows[columnName_Width] = 16;
rows[columnName_Input] = 0;
rows[columnName_InEeprom] = 1;

// P4
rows = {};
counter++;
Params.speed_reference = rows;
rows[columnName_num] = counter;
rows[columnName_Group] = 'P4';
rows[columnName_Name] = 'Speed Reference';
rows[columnName_Unit] = 'r/min';
initRow(rows);
rows[columnName_Address] = '258';
rows[columnName_CurrentValue] = 0;
rows[columnName_DefaultValue] = 0;
rows[columnName_Max] = 1;
rows[columnName_Min] = 0;
rows[columnName_Sign] = false;
rows[columnName_Width] = 16;
rows[columnName_Input] = 0;
rows[columnName_InEeprom] = 1;

rows = {};
counter++;
Params.speed_reference_filter_time = rows;
rows[columnName_num] = counter;
rows[columnName_Group] = 'P4';
rows[columnName_Name] = 'Speed Reference Filter Time';
rows[columnName_Unit] = 'ms';
initRow(rows);
rows[columnName_Address] = '258';
rows[columnName_CurrentValue] = 0;
rows[columnName_DefaultValue] = 0;
rows[columnName_Max] = 1;
rows[columnName_Min] = 0;
rows[columnName_Sign] = false;
rows[columnName_Width] = 16;
rows[columnName_Input] = 0;
rows[columnName_InEeprom] = 1;

rows = {};
counter++;
Params.Speed_feedback_filter_time = rows;
rows[columnName_num] = counter;
rows[columnName_Group] = 'P4';
rows[columnName_Name] = 'Speed Feedback Filter Time';
rows[columnName_Unit] = 'ms';
initRow(rows);
rows[columnName_Address] = '258';
rows[columnName_CurrentValue] = 0;
rows[columnName_DefaultValue] = 0;
rows[columnName_Max] = 1;
rows[columnName_Min] = 0;
rows[columnName_Sign] = false;
rows[columnName_Width] = 16;
rows[columnName_Input] = 0;
rows[columnName_InEeprom] = 1;

rows = {};
counter++;
Params.speed_limit = rows;
rows[columnName_num] = counter;
rows[columnName_Group] = 'P4';
rows[columnName_Name] = 'Speed Limit';
rows[columnName_Unit] = 'r/min';
initRow(rows);
rows[columnName_Address] = '258';
rows[columnName_CurrentValue] = 0;
rows[columnName_DefaultValue] = 0;
rows[columnName_Max] = 1;
rows[columnName_Min] = 0;
rows[columnName_Sign] = false;
rows[columnName_Width] = 16;
rows[columnName_Input] = 0;
rows[columnName_InEeprom] = 1;

// P5
rows = {};
counter++;
Params.torque_reference = rows;
rows[columnName_num] = counter;
rows[columnName_Group] = 'P5';
rows[columnName_Name] = 'Torque Reference';
rows[columnName_Unit] = '0.01%';
initRow(rows);
rows[columnName_Address] = '258';
rows[columnName_CurrentValue] = 0;
rows[columnName_DefaultValue] = 0;
rows[columnName_Max] = 1;
rows[columnName_Min] = 0;
rows[columnName_Sign] = false;
rows[columnName_Width] = 16;
rows[columnName_Input] = 0;
rows[columnName_InEeprom] = 1;

// P6
rows = {};
counter++;
Params.device_id = rows;
rows[columnName_num] = counter;
rows[columnName_Group] = 'P6';
rows[columnName_Name] = 'Device ID';
rows[columnName_Unit] = '';
initRow(rows);
rows[columnName_Address] = '258';
rows[columnName_CurrentValue] = 0;
rows[columnName_DefaultValue] = 0;
rows[columnName_Max] = 1;
rows[columnName_Min] = 0;
rows[columnName_Sign] = false;
rows[columnName_Width] = 16;
rows[columnName_Input] = 0;
rows[columnName_InEeprom] = 1;

rows = {};
counter++;
Params.baud_rate = rows;
rows[columnName_num] = counter;
rows[columnName_Group] = 'P6';
rows[columnName_Name] = 'BaudRate';
rows[columnName_Unit] = '';
initRow(rows);
rows[columnName_Address] = '258';
rows[columnName_CurrentValue] = 0;
rows[columnName_DefaultValue] = 0;
rows[columnName_Max] = 1;
rows[columnName_Min] = 0;
rows[columnName_Sign] = false;
rows[columnName_Width] = 16;
rows[columnName_Input] = 0;
rows[columnName_InEeprom] = 1;

rows = {};
counter++;
Params.parity = rows;
rows[columnName_num] = counter;
rows[columnName_Group] = 'P6';
rows[columnName_Name] = 'Parity';
rows[columnName_Unit] = '';
initRow(rows);
rows[columnName_Address] = '258';
rows[columnName_CurrentValue] = 0;
rows[columnName_DefaultValue] = 0;
rows[columnName_Max] = 1;
rows[columnName_Min] = 0;
rows[columnName_Sign] = false;
rows[columnName_Width] = 16;
rows[columnName_Input] = 0;
rows[columnName_InEeprom] = 1;

// P7
rows = {};
counter++;
Params.position_command = rows;
rows[columnName_num] = counter;
rows[columnName_Group] = 'P7';
rows[columnName_Name] = 'Position Command';
rows[columnName_Unit] = 'Pulse';
initRow(rows);
rows[columnName_Address] = '258';
rows[columnName_CurrentValue] = 0;
rows[columnName_DefaultValue] = 0;
rows[columnName_Max] = 1;
rows[columnName_Min] = 0;
rows[columnName_Sign] = false;
rows[columnName_Width] = 16;
rows[columnName_Input] = 0;
rows[columnName_InEeprom] = 1;

// P8
rows = {};
counter++;
Params.hardware_version = rows;
rows[columnName_num] = counter;
rows[columnName_Group] = 'P8';
rows[columnName_Name] = 'Hardware Version';
rows[columnName_Unit] = '';
initRow(rows);
rows[columnName_Address] = '258';
rows[columnName_CurrentValue] = 0;
rows[columnName_DefaultValue] = 0;
rows[columnName_Max] = 1;
rows[columnName_Min] = 0;
rows[columnName_Sign] = false;
rows[columnName_Width] = 16;
rows[columnName_Input] = 0;
rows[columnName_InEeprom] = 1;

rows = {};
counter++;
Params.software_version = rows;
rows[columnName_num] = counter;
rows[columnName_Group] = 'P8';
rows[columnName_Name] = 'Software Version';
rows[columnName_Unit] = '';
initRow(rows);
rows[columnName_Address] = '258';
rows[columnName_CurrentValue] = 0;
rows[columnName_DefaultValue] = 0;
rows[columnName_Max] = 1;
rows[columnName_Min] = 0;
rows[columnName_Sign] = false;
rows[columnName_Width] = 16;
rows[columnName_Input] = 0;
rows[columnName_InEeprom] = 1;

rows = {};
counter++;
Params.encoder_type = rows;
rows[columnName_num] = counter;
rows[columnName_Group] = 'P8';
rows[columnName_Name] = 'Encoder Type';
rows[columnName_Unit] = '';
initRow(rows);
rows[columnName_Address] = '258';
rows[columnName_CurrentValue] = 0;
rows[columnName_DefaultValue] = 0;
rows[columnName_Max] = 1;
rows[columnName_Min] = 0;
rows[columnName_Sign] = false;
rows[columnName_Width] = 16;
rows[columnName_Input] = 0;
rows[columnName_InEeprom] = 1;

rows = {};
counter++;
Params.encoder_lines = rows;
rows[columnName_num] = counter;
rows[columnName_Group] = 'P8';
rows[columnName_Name] = 'Encoder Lines';
rows[columnName_Unit] = 'Pulse';
initRow(rows);
rows[columnName_Address] = '258';
rows[columnName_CurrentValue] = 0;
rows[columnName_DefaultValue] = 0;
rows[columnName_Max] = 1;
rows[columnName_Min] = 0;
rows[columnName_Sign] = false;
rows[columnName_Width] = 16;
rows[columnName_Input] = 0;
rows[columnName_InEeprom] = 1;

rows = {};
counter++;
Params.motor_initial_position = rows;
rows[columnName_num] = counter;
rows[columnName_Group] = 'P8';
rows[columnName_Name] = 'Motor Initial Position';
rows[columnName_Unit] = 'Pulse';
initRow(rows);

// P9
rows = {};
counter++;
Params.power_level = rows;
rows[columnName_num] = counter;
rows[columnName_Group] = 'P9';
rows[columnName_Name] = 'Power Level';
rows[columnName_Unit] = '';
initRow(rows);
rows[columnName_Address] = '258';
rows[columnName_CurrentValue] = 0;
rows[columnName_DefaultValue] = 0;
rows[columnName_Max] = 1;
rows[columnName_Min] = 0;
rows[columnName_Sign] = false;
rows[columnName_Width] = 16;
rows[columnName_Input] = 0;
rows[columnName_InEeprom] = 1;

rows = {};
counter++;
Params.current_kp = rows;
rows[columnName_num] = counter;
rows[columnName_Group] = 'P9';
rows[columnName_Name] = 'Current Kp';
rows[columnName_Unit] = '';
initRow(rows);
rows[columnName_Address] = '258';
rows[columnName_CurrentValue] = 0;
rows[columnName_DefaultValue] = 0;
rows[columnName_Max] = 1;
rows[columnName_Min] = 0;
rows[columnName_Sign] = false;
rows[columnName_Width] = 16;
rows[columnName_Input] = 0;
rows[columnName_InEeprom] = 1;

rows = {};
counter++;
Params.current_ki = rows;
rows[columnName_num] = counter;
rows[columnName_Group] = 'P9';
rows[columnName_Name] = 'Current Ki';
rows[columnName_Unit] = '';
initRow(rows);
rows[columnName_Address] = '258';
rows[columnName_CurrentValue] = 0;
rows[columnName_DefaultValue] = 0;
rows[columnName_Max] = 1;
rows[columnName_Min] = 0;
rows[columnName_Sign] = false;
rows[columnName_Width] = 16;
rows[columnName_Input] = 0;
rows[columnName_InEeprom] = 1;

export default Params;
